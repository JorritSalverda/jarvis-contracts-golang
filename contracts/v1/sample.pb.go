// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.12.2
// source: jarvis/contracts/v1/sample.proto

package v1

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// A sample represents a single measured value with with a measurement; a measurement can have multiple samples.
type Sample struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceName       string           `protobuf:"bytes,1,opt,name=device_name,json=deviceName,proto3" json:"device_name,omitempty"`
	SampleName       string           `protobuf:"bytes,2,opt,name=sample_name,json=sampleName,proto3" json:"sample_name,omitempty"`
	AggregationLevel AggregationLevel `protobuf:"varint,3,opt,name=aggregation_level,json=aggregationLevel,proto3,enum=jarvis.contracts.v1.AggregationLevel" json:"aggregation_level,omitempty"`
	MetricType       MetricType       `protobuf:"varint,4,opt,name=metric_type,json=metricType,proto3,enum=jarvis.contracts.v1.MetricType" json:"metric_type,omitempty"`
	Value            float64          `protobuf:"fixed64,5,opt,name=value,proto3" json:"value,omitempty"`
	SampleType       SampleType       `protobuf:"varint,6,opt,name=sample_type,json=sampleType,proto3,enum=jarvis.contracts.v1.SampleType" json:"sample_type,omitempty"`
	SampleUnit       SampleUnit       `protobuf:"varint,7,opt,name=sample_unit,json=sampleUnit,proto3,enum=jarvis.contracts.v1.SampleUnit" json:"sample_unit,omitempty"`
}

func (x *Sample) Reset() {
	*x = Sample{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jarvis_contracts_v1_sample_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Sample) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sample) ProtoMessage() {}

func (x *Sample) ProtoReflect() protoreflect.Message {
	mi := &file_jarvis_contracts_v1_sample_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sample.ProtoReflect.Descriptor instead.
func (*Sample) Descriptor() ([]byte, []int) {
	return file_jarvis_contracts_v1_sample_proto_rawDescGZIP(), []int{0}
}

func (x *Sample) GetDeviceName() string {
	if x != nil {
		return x.DeviceName
	}
	return ""
}

func (x *Sample) GetSampleName() string {
	if x != nil {
		return x.SampleName
	}
	return ""
}

func (x *Sample) GetAggregationLevel() AggregationLevel {
	if x != nil {
		return x.AggregationLevel
	}
	return AggregationLevel_AGGREGATION_LEVEL_INVALID
}

func (x *Sample) GetMetricType() MetricType {
	if x != nil {
		return x.MetricType
	}
	return MetricType_METRIC_TYPE_INVALID
}

func (x *Sample) GetValue() float64 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *Sample) GetSampleType() SampleType {
	if x != nil {
		return x.SampleType
	}
	return SampleType_SAMPLE_TYPE_INVALID
}

func (x *Sample) GetSampleUnit() SampleUnit {
	if x != nil {
		return x.SampleUnit
	}
	return SampleUnit_SAMPLE_UNIT_INVALID
}

var File_jarvis_contracts_v1_sample_proto protoreflect.FileDescriptor

var file_jarvis_contracts_v1_sample_proto_rawDesc = []byte{
	0x0a, 0x20, 0x6a, 0x61, 0x72, 0x76, 0x69, 0x73, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x13, 0x6a, 0x61, 0x72, 0x76, 0x69, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x1a, 0x25, 0x6a, 0x61, 0x72, 0x76, 0x69, 0x73, 0x2f,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x61, 0x6d,
	0x70, 0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x25,
	0x6a, 0x61, 0x72, 0x76, 0x69, 0x73, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73,
	0x2f, 0x76, 0x31, 0x2f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x25, 0x6a, 0x61, 0x72, 0x76, 0x69, 0x73, 0x2f, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2b, 0x6a, 0x61,
	0x72, 0x76, 0x69, 0x73, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2f, 0x76,
	0x31, 0x2f, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6c, 0x65,
	0x76, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xfa, 0x02, 0x0a, 0x06, 0x53, 0x61,
	0x6d, 0x70, 0x6c, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x52, 0x0a, 0x11, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x25, 0x2e, 0x6a, 0x61, 0x72, 0x76, 0x69, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x10, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x40, 0x0a, 0x0b, 0x6d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1f, 0x2e, 0x6a, 0x61, 0x72, 0x76, 0x69, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x0a, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x40, 0x0a, 0x0b, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x6a, 0x61, 0x72, 0x76, 0x69, 0x73,
	0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x61,
	0x6d, 0x70, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x40, 0x0a, 0x0b, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x5f, 0x75,
	0x6e, 0x69, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x6a, 0x61, 0x72, 0x76,
	0x69, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x55, 0x6e, 0x69, 0x74, 0x52, 0x0a, 0x73, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x55, 0x6e, 0x69, 0x74, 0x42, 0x40, 0x5a, 0x3e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4a, 0x6f, 0x72, 0x72, 0x69, 0x74, 0x53, 0x61, 0x6c, 0x76, 0x65,
	0x72, 0x64, 0x61, 0x2f, 0x6a, 0x61, 0x72, 0x76, 0x69, 0x73, 0x2d, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x73, 0x2d, 0x67, 0x6f, 0x6c, 0x61, 0x6e, 0x67, 0x2f, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x73, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_jarvis_contracts_v1_sample_proto_rawDescOnce sync.Once
	file_jarvis_contracts_v1_sample_proto_rawDescData = file_jarvis_contracts_v1_sample_proto_rawDesc
)

func file_jarvis_contracts_v1_sample_proto_rawDescGZIP() []byte {
	file_jarvis_contracts_v1_sample_proto_rawDescOnce.Do(func() {
		file_jarvis_contracts_v1_sample_proto_rawDescData = protoimpl.X.CompressGZIP(file_jarvis_contracts_v1_sample_proto_rawDescData)
	})
	return file_jarvis_contracts_v1_sample_proto_rawDescData
}

var file_jarvis_contracts_v1_sample_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_jarvis_contracts_v1_sample_proto_goTypes = []interface{}{
	(*Sample)(nil),        // 0: jarvis.contracts.v1.Sample
	(AggregationLevel)(0), // 1: jarvis.contracts.v1.AggregationLevel
	(MetricType)(0),       // 2: jarvis.contracts.v1.MetricType
	(SampleType)(0),       // 3: jarvis.contracts.v1.SampleType
	(SampleUnit)(0),       // 4: jarvis.contracts.v1.SampleUnit
}
var file_jarvis_contracts_v1_sample_proto_depIdxs = []int32{
	1, // 0: jarvis.contracts.v1.Sample.aggregation_level:type_name -> jarvis.contracts.v1.AggregationLevel
	2, // 1: jarvis.contracts.v1.Sample.metric_type:type_name -> jarvis.contracts.v1.MetricType
	3, // 2: jarvis.contracts.v1.Sample.sample_type:type_name -> jarvis.contracts.v1.SampleType
	4, // 3: jarvis.contracts.v1.Sample.sample_unit:type_name -> jarvis.contracts.v1.SampleUnit
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_jarvis_contracts_v1_sample_proto_init() }
func file_jarvis_contracts_v1_sample_proto_init() {
	if File_jarvis_contracts_v1_sample_proto != nil {
		return
	}
	file_jarvis_contracts_v1_sample_type_proto_init()
	file_jarvis_contracts_v1_sample_unit_proto_init()
	file_jarvis_contracts_v1_metric_type_proto_init()
	file_jarvis_contracts_v1_aggregation_level_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_jarvis_contracts_v1_sample_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Sample); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_jarvis_contracts_v1_sample_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_jarvis_contracts_v1_sample_proto_goTypes,
		DependencyIndexes: file_jarvis_contracts_v1_sample_proto_depIdxs,
		MessageInfos:      file_jarvis_contracts_v1_sample_proto_msgTypes,
	}.Build()
	File_jarvis_contracts_v1_sample_proto = out.File
	file_jarvis_contracts_v1_sample_proto_rawDesc = nil
	file_jarvis_contracts_v1_sample_proto_goTypes = nil
	file_jarvis_contracts_v1_sample_proto_depIdxs = nil
}
