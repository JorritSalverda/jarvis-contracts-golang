// Code generated by protoc-gen-go. DO NOT EDIT.
// source: jarvis/contracts/v1/sample.proto

package v1

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// A sample represents a single measured value with with a measurement; a measurement can have multiple samples.
type Sample struct {
	Name                 string     `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	DisplayName          string     `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	Value                float64    `protobuf:"fixed64,3,opt,name=value,proto3" json:"value,omitempty"`
	SampleType           SampleType `protobuf:"varint,4,opt,name=sample_type,json=sampleType,proto3,enum=jarvis.contracts.v1.SampleType" json:"sample_type,omitempty"`
	SampleUnit           SampleUnit `protobuf:"varint,5,opt,name=sample_unit,json=sampleUnit,proto3,enum=jarvis.contracts.v1.SampleUnit" json:"sample_unit,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Sample) Reset()         { *m = Sample{} }
func (m *Sample) String() string { return proto.CompactTextString(m) }
func (*Sample) ProtoMessage()    {}
func (*Sample) Descriptor() ([]byte, []int) {
	return fileDescriptor_aeafe98fcaf65e33, []int{0}
}

func (m *Sample) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Sample.Unmarshal(m, b)
}
func (m *Sample) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Sample.Marshal(b, m, deterministic)
}
func (m *Sample) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Sample.Merge(m, src)
}
func (m *Sample) XXX_Size() int {
	return xxx_messageInfo_Sample.Size(m)
}
func (m *Sample) XXX_DiscardUnknown() {
	xxx_messageInfo_Sample.DiscardUnknown(m)
}

var xxx_messageInfo_Sample proto.InternalMessageInfo

func (m *Sample) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Sample) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *Sample) GetValue() float64 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *Sample) GetSampleType() SampleType {
	if m != nil {
		return m.SampleType
	}
	return SampleType_SAMPLE_TYPE_INVALID
}

func (m *Sample) GetSampleUnit() SampleUnit {
	if m != nil {
		return m.SampleUnit
	}
	return SampleUnit_SAMPLE_UNIT_INVALID
}

func init() {
	proto.RegisterType((*Sample)(nil), "jarvis.contracts.v1.Sample")
}

func init() { proto.RegisterFile("jarvis/contracts/v1/sample.proto", fileDescriptor_aeafe98fcaf65e33) }

var fileDescriptor_aeafe98fcaf65e33 = []byte{
	// 247 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x52, 0xc8, 0x4a, 0x2c, 0x2a,
	0xcb, 0x2c, 0xd6, 0x4f, 0xce, 0xcf, 0x2b, 0x29, 0x4a, 0x4c, 0x2e, 0x29, 0xd6, 0x2f, 0x33, 0xd4,
	0x2f, 0x4e, 0xcc, 0x2d, 0xc8, 0x49, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x12, 0x86, 0xa8,
	0xd0, 0x83, 0xab, 0xd0, 0x2b, 0x33, 0x94, 0x52, 0xc5, 0xad, 0x2d, 0xbe, 0xa4, 0xb2, 0x00, 0xaa,
	0x17, 0xaf, 0xb2, 0xd2, 0xbc, 0xcc, 0x12, 0x88, 0x32, 0xa5, 0x9b, 0x8c, 0x5c, 0x6c, 0xc1, 0x60,
	0x51, 0x21, 0x21, 0x2e, 0x96, 0xbc, 0xc4, 0xdc, 0x54, 0x09, 0x46, 0x05, 0x46, 0x0d, 0xce, 0x20,
	0x30, 0x5b, 0x48, 0x91, 0x8b, 0x27, 0x25, 0xb3, 0xb8, 0x20, 0x27, 0xb1, 0x32, 0x1e, 0x2c, 0xc7,
	0x04, 0x96, 0xe3, 0x86, 0x8a, 0xf9, 0x81, 0x94, 0x88, 0x70, 0xb1, 0x96, 0x25, 0xe6, 0x94, 0xa6,
	0x4a, 0x30, 0x2b, 0x30, 0x6a, 0x30, 0x06, 0x41, 0x38, 0x42, 0x0e, 0x5c, 0xdc, 0x48, 0x6e, 0x92,
	0x60, 0x51, 0x60, 0xd4, 0xe0, 0x33, 0x92, 0xd7, 0xc3, 0xe2, 0x21, 0x3d, 0x88, 0xf5, 0x21, 0x95,
	0x05, 0xa9, 0x41, 0x5c, 0xc5, 0x70, 0x36, 0x92, 0x09, 0x20, 0xe7, 0x4a, 0xb0, 0x12, 0x34, 0x21,
	0x34, 0x2f, 0xb3, 0x04, 0x66, 0x02, 0x88, 0xed, 0xe4, 0x10, 0x65, 0x97, 0x9e, 0x59, 0x92, 0x51,
	0x9a, 0xa4, 0x97, 0x9c, 0x9f, 0xab, 0xef, 0x95, 0x5f, 0x54, 0x94, 0x59, 0x12, 0x9c, 0x98, 0x53,
	0x96, 0x5a, 0x94, 0x92, 0xa8, 0x0f, 0x31, 0x47, 0x17, 0x6e, 0x8e, 0x6e, 0x7a, 0x7e, 0x4e, 0x62,
	0x5e, 0x3a, 0x4a, 0x78, 0x25, 0xb1, 0x81, 0x03, 0xc9, 0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0x0d,
	0x12, 0x63, 0x67, 0xab, 0x01, 0x00, 0x00,
}
