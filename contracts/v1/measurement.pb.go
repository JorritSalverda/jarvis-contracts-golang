// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: jarvis/contracts/v1/measurement.proto

package v1

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

// A measurements is a range of samples read at the same time from the same source.
type Measurement struct {
	Source               string               `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty"`
	Location             string               `protobuf:"bytes,2,opt,name=location,proto3" json:"location,omitempty"`
	Samples              []*Sample            `protobuf:"bytes,3,rep,name=samples,proto3" json:"samples,omitempty"`
	MeasuredAtTime       *timestamp.Timestamp `protobuf:"bytes,4,opt,name=measured_at_time,json=measuredAtTime,proto3" json:"measured_at_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Measurement) Reset()         { *m = Measurement{} }
func (m *Measurement) String() string { return proto.CompactTextString(m) }
func (*Measurement) ProtoMessage()    {}
func (*Measurement) Descriptor() ([]byte, []int) {
	return fileDescriptor_667f50bda719ce35, []int{0}
}
func (m *Measurement) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Measurement.Unmarshal(m, b)
}
func (m *Measurement) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Measurement.Marshal(b, m, deterministic)
}
func (m *Measurement) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Measurement.Merge(m, src)
}
func (m *Measurement) XXX_Size() int {
	return xxx_messageInfo_Measurement.Size(m)
}
func (m *Measurement) XXX_DiscardUnknown() {
	xxx_messageInfo_Measurement.DiscardUnknown(m)
}

var xxx_messageInfo_Measurement proto.InternalMessageInfo

func (m *Measurement) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

func (m *Measurement) GetLocation() string {
	if m != nil {
		return m.Location
	}
	return ""
}

func (m *Measurement) GetSamples() []*Sample {
	if m != nil {
		return m.Samples
	}
	return nil
}

func (m *Measurement) GetMeasuredAtTime() *timestamp.Timestamp {
	if m != nil {
		return m.MeasuredAtTime
	}
	return nil
}

func init() {
	proto.RegisterType((*Measurement)(nil), "jarvis.contracts.v1.Measurement")
}

func init() {
	proto.RegisterFile("jarvis/contracts/v1/measurement.proto", fileDescriptor_667f50bda719ce35)
}

var fileDescriptor_667f50bda719ce35 = []byte{
	// 263 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x90, 0xc1, 0x4a, 0xf4, 0x30,
	0x14, 0x85, 0xe9, 0x3f, 0x3f, 0xa3, 0xa6, 0x20, 0x52, 0x41, 0x4a, 0x5d, 0x58, 0x04, 0xa1, 0x9b,
	0x49, 0x98, 0x11, 0xb7, 0xa2, 0xe2, 0x4a, 0x70, 0xd3, 0x71, 0xe5, 0x66, 0xb8, 0xed, 0xc4, 0x18,
	0x49, 0x7a, 0x4b, 0x72, 0xdb, 0xc7, 0xf3, 0xd9, 0x64, 0x9a, 0x69, 0x45, 0x98, 0xe5, 0x49, 0xbe,
	0xc3, 0xf9, 0x12, 0x76, 0xf3, 0x05, 0xae, 0xd7, 0x5e, 0xd4, 0xd8, 0x90, 0x83, 0x9a, 0xbc, 0xe8,
	0x97, 0xc2, 0x4a, 0xf0, 0x9d, 0x93, 0x56, 0x36, 0xc4, 0x5b, 0x87, 0x84, 0xc9, 0x79, 0xc0, 0xf8,
	0x84, 0xf1, 0x7e, 0x99, 0xe5, 0x87, 0xba, 0x1e, 0x6c, 0x6b, 0x64, 0xa8, 0x65, 0x57, 0x0a, 0x51,
	0x19, 0x29, 0x86, 0x54, 0x75, 0x1f, 0x82, 0xb4, 0x95, 0x9e, 0xc0, 0xb6, 0x01, 0xb8, 0xfe, 0x8e,
	0x58, 0xfc, 0xfa, 0xbb, 0x96, 0x5c, 0xb0, 0xb9, 0xc7, 0xce, 0xd5, 0x32, 0x8d, 0xf2, 0xa8, 0x38,
	0x29, 0xf7, 0x29, 0xc9, 0xd8, 0xb1, 0xc1, 0x1a, 0x48, 0x63, 0x93, 0xfe, 0x1b, 0x6e, 0xa6, 0x9c,
	0xdc, 0xb1, 0xa3, 0x30, 0xea, 0xd3, 0x59, 0x3e, 0x2b, 0xe2, 0xd5, 0x25, 0x3f, 0x60, 0xcb, 0xd7,
	0x03, 0x53, 0x8e, 0x6c, 0xf2, 0xcc, 0xce, 0xf6, 0xef, 0xdc, 0x6e, 0x80, 0x36, 0x3b, 0xb3, 0xf4,
	0x7f, 0x1e, 0x15, 0xf1, 0x2a, 0xe3, 0x41, 0x9b, 0x8f, 0xda, 0xfc, 0x6d, 0xd4, 0x2e, 0x4f, 0xc7,
	0xce, 0x23, 0xed, 0x0e, 0x9f, 0x1e, 0xde, 0xef, 0x95, 0xa6, 0xcf, 0xae, 0xe2, 0x35, 0x5a, 0xf1,
	0x82, 0xce, 0x69, 0x5a, 0x83, 0xe9, 0xa5, 0xdb, 0x82, 0x08, 0x1a, 0x8b, 0x49, 0x63, 0xa1, 0xd0,
	0x40, 0xa3, 0xfe, 0x7c, 0x58, 0x35, 0x1f, 0x56, 0x6e, 0x7f, 0x02, 0x00, 0x00, 0xff, 0xff, 0xec,
	0xd3, 0xfa, 0xa5, 0x8a, 0x01, 0x00, 0x00,
}
